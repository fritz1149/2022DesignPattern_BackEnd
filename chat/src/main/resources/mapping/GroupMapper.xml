<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dp.chat.dao.GroupMapper">
    <resultMap id="groupMap" type="com.dp.chat.entity.Group">
        <id column="id" property="groupId"/>
        <result column="name" property="groupName"/>
        <result column="avatar" property="avatar"/>
    </resultMap>

    <insert id="addGroup" useGeneratedKeys="true" keyProperty="groupId">
        insert into `group`(name)
        values(#{group.groupName})
    </insert>

    <select id="getGroupById" resultMap="groupMap">
        select id, name, avatar
        from `group`
        where id = #{groupId}
    </select>

    <select id="getGroupByName" resultMap="groupMap">
        select id, name, avatar
        from `group`
        where name like concat('%', #{name}, '%')
    </select>

    <select id="getStrangerGroupByName" resultMap="groupMap">
        select id, name, avatar
        from
            (select id, name, avatar
            from `group`
            where name like concat('%', #{name}, '%')) as a
                left join
            (select group_id
            from `member`
            where user_id = #{userId}) as b
                on a.id = b.group_id
        where group_id is null
    </select>

    <select id="getMyGroupByName" resultMap="groupMap">
        select id, name, avatar
        from
            (select id, name, avatar
             from `group`
             where name like concat('%', #{name}, '%')) as a
                join
            (select group_id
             from member
             where user_id = #{userId}) as b
            on a.id = b.group_id
    </select>

    <select id="getMyGroups" resultMap="groupMap">
        select id, name, avatar
        from
            (select id, name, avatar
             from `group`) as a
                join
            (select group_id
             from member
             where user_id = #{userId}) as b
            on a.id = b.group_id
    </select>

    <insert id="addMember">
        insert into member(user_id, group_id)
        values(#{userId}, #{groupId})
    </insert>

    <delete id="deleteMember">
        delete from member
        where user_id = #{userId} and group_id = #{groupId}
    </delete>

    <update id="uploadAvatar">
        update `group`
        set avatar = #{avatar}
        where id = #{groupId}
    </update>
</mapper>